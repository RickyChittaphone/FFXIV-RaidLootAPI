// <auto-generated />
using FFXIV_RaidLootAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FFXIV_RaidLootAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240520141000_Added Player gear info + removed PlayerList from Static + Renamed GearLevel to GearStage (using GearLevel for item level of gear piece)")]
    partial class AddedPlayergearinforemovedPlayerListfromStaticRenamedGearLeveltoGearStageusingGearLevelforitemlevelofgearpiece
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FFXIV_RaidLootAPI.Models.Gear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GearLevel")
                        .HasColumnType("int");

                    b.Property<int>("GearStage")
                        .HasColumnType("int");

                    b.Property<int>("GearType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gears");
                });

            modelBuilder.Entity("FFXIV_RaidLootAPI.Models.Players", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BiSNecklaceGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisBraceletGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisCoatGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisEarringGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisFeetGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisHandGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisHeadGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisLeftRingGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisLegGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisRightRingGearId")
                        .HasColumnType("int");

                    b.Property<int>("BisWeaponGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurBraceletGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurCoatGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurEarringGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurFeetGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurHandGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurHeadGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurLeftRingGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurLegGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurNecklaceGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurRightRingGearId")
                        .HasColumnType("int");

                    b.Property<int>("CurWeaponGearId")
                        .HasColumnType("int");

                    b.Property<string>("EtroBiS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("staticId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("FFXIV_RaidLootAPI.Models.Raid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Raids");
                });

            modelBuilder.Entity("FFXIV_RaidLootAPI.Models.Static", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UUID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statics");
                });
#pragma warning restore 612, 618
        }
    }
}
